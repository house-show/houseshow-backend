// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  username     String     @unique
  email        String     @unique
  passwordHash String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  userTasks    UserTask[]
  userCards    UserCard[]
  scores       Score[]
}

model Task {
  id            Int        @id @default(autoincrement())
  name          String
  description   String?
  points        Int
  imageUrl      String?
  imageUrlSmall String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  userTasks     UserTask[]
}

model UserTask {
  id          Int       @id @default(autoincrement())
  userId      Int
  taskId      Int
  dueDate     DateTime
  status      String // Consider using an enum for predefined statuses
  assignedAt  DateTime  @default(now())
  completedAt DateTime?
  user        User      @relation(fields: [userId], references: [id])
  task        Task      @relation(fields: [taskId], references: [id])
}

model SpecialCard {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  frequency   String // Consider using an enum for predefined frequencies
  userCards   UserCard[]
}

model UserCard {
  id         Int         @id @default(autoincrement())
  userId     Int
  cardId     Int
  acquiredAt DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  card       SpecialCard @relation(fields: [cardId], references: [id])
}

model Score {
  id     Int  @id @default(autoincrement())
  userId Int
  week   Int
  month  Int
  year   Int
  points Int
  user   User @relation(fields: [userId], references: [id])
}
